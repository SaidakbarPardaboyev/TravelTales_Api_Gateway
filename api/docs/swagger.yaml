basePath: /travel
definitions:
  models.Error:
    properties:
      message:
        type: string
    type: object
  users.Follower:
    properties:
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  users.RequestEditProfile:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      full_name:
        type: string
      id:
        type: string
    type: object
  users.RequestFollow:
    properties:
      follower_id:
        type: string
      following_id:
        type: string
    type: object
  users.RequestUpdatePassword:
    properties:
      email:
        type: string
      new_password:
        type: string
    type: object
  users.ResponseDeleteUser:
    properties:
      message:
        type: string
    type: object
  users.ResponseEditProfile:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  users.ResponseFollow:
    properties:
      followed_at:
        type: string
      follower_id:
        type: string
      following_id:
        type: string
    type: object
  users.ResponseGetFollowers:
    properties:
      followers:
        items:
          $ref: '#/definitions/users.Follower'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  users.ResponseGetProfile:
    properties:
      bio:
        type: string
      countries_visited:
        type: integer
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  users.ResponseGetUserStatistic:
    properties:
      comments_count:
        type: integer
      countries_visited:
        type: integer
      last_active:
        type: string
      likes_received:
        type: integer
      stories_count:
        type: integer
      user_id:
        type: string
    type: object
  users.ResponseGetUsers:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/users.User'
        type: array
    type: object
  users.ResponseUpdatePassword:
    properties:
      message:
        type: string
    type: object
  users.Status:
    properties:
      Success:
        type: boolean
    type: object
  users.User:
    properties:
      countries_visited:
        type: integer
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:4444
info:
  contact:
    email: '"pardaboyevsaidakbar103@gmail.com"'
    name: Saidakbar
    url: http://www.support_me_with_smile
  description: Sayohatchilar o'rtasida tajriba almashish, sayohat rejalarini tuzish
    va boshqalar bilan bo'lishish imkoniyatini yaratish orqali global sayohat hamjamiyatini
    shakllantirish.
  title: TravelTales App
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: this is for getting user information
      parameters:
      - description: limit is required
        in: query
        name: limit
        required: true
        type: integer
      - description: page is required
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: returns users information
          schema:
            $ref: '#/definitions/users.ResponseGetUsers'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get Users info
      tags:
      - users
  /users/{id}/GetProfile:
    get:
      consumes:
      - application/json
      description: this is for getting a user information
      parameters:
      - description: id is required
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: returns users info
          schema:
            $ref: '#/definitions/users.ResponseGetProfile'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get User information
      tags:
      - users
  /users/{id}/delete:
    delete:
      consumes:
      - application/json
      description: This endpoint is for deleting a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message about deleting user
          schema:
            $ref: '#/definitions/users.ResponseDeleteUser'
        "400":
          description: Occurs when user enters invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Occurs when an internal service error happens
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete User
      tags:
      - users
  /users/{id}/editprofile:
    post:
      consumes:
      - application/json
      description: this is for editing user information
      parameters:
      - description: id is required
        in: path
        name: id
        required: true
        type: string
      - description: all params are required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.RequestEditProfile'
      produces:
      - application/json
      responses:
        "200":
          description: returns user information about existing user
          schema:
            $ref: '#/definitions/users.ResponseEditProfile'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Edit Profile
      tags:
      - users
  /users/{id}/follow:
    post:
      consumes:
      - application/json
      description: this is for following user
      parameters:
      - description: id is required
        in: path
        name: id
        required: true
        type: string
      - description: all params are required and followoreId is taking from params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.RequestFollow'
      produces:
      - application/json
      responses:
        "200":
          description: returns all ditails about following
          schema:
            $ref: '#/definitions/users.ResponseFollow'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Follow
      tags:
      - users
  /users/{id}/followers:
    get:
      consumes:
      - application/json
      description: this is for getting followers information
      parameters:
      - description: id is required
        in: path
        name: id
        required: true
        type: string
      - description: limit is required
        in: query
        name: limit
        required: true
        type: integer
      - description: page is required
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: returns followers information
          schema:
            $ref: '#/definitions/users.ResponseGetFollowers'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get Followers
      tags:
      - users
  /users/{id}/statistic:
    get:
      consumes:
      - application/json
      description: This endpoint is for taking User's Statistic
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: return user's statistics
          schema:
            $ref: '#/definitions/users.ResponseGetUserStatistic'
        "400":
          description: Occurs when user enters invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Occurs when an internal service error happens
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get User's Statistic
      tags:
      - users
  /users/{id}/validate:
    get:
      consumes:
      - application/json
      description: this is for chacking user is exists
      parameters:
      - description: id is required
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: returns boolean value about existing user
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: It occurs when user enter invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: It occurs when error happenes internal service
          schema:
            $ref: '#/definitions/models.Error'
      summary: Validate User
      tags:
      - users
  /users/update:
    put:
      consumes:
      - application/json
      description: This endpoint is for updating password
      parameters:
      - description: User ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.RequestUpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: Message about updating password
          schema:
            $ref: '#/definitions/users.ResponseUpdatePassword'
        "400":
          description: Occurs when user enters invalid params
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Occurs when an internal service error happens
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update Password
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
